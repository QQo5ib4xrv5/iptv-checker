name: Download Artifacts and Create Release

on:
  workflow_run:
    workflows: ["Rust"]
    types: 
      - completed

jobs:
  download_and_create_release:
    runs-on: ubuntu-latest

    steps:
    - name: Download Artifacts
      id: download_artifacts
      uses: actions/github-script@v3
      with:
        script: |
          let artifacts = await github.actions.listWorkflowRunArtifacts({
             owner: context.repo.owner,
             repo: 'iptv-checker-rs',
             run_id: context.payload.workflow_run.id
          });
          for(const artifact of artifacts.data.artifacts) {
            let download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: 'iptv-checker-rs',
               artifact_id: artifact.id,
               archive_format: 'zip'
            });
            let artifactPath = `${artifact.name}.zip`;
            await require('fs').promises.writeFile(artifactPath, Buffer.from(download.data.arrayBuffer()));
            console.log(`Downloaded ${artifactPath}`);
          }

    - name: Unzip Artifacts
      run: |
        for artifact in *.zip
        do
          unzip -o ${artifact}
        done

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      id: upload_release_assets
      uses: actions/github-script@v3
      with:
        script: |
          const fs = require('fs');
          fs.readdirSync('./').forEach(async (file) => {
            if (file.endsWith('.zip')) return;
            const filePath = './' + file;
            await github.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              name: file,
              data: fs.readFileSync(filePath),
              headers: {
                'content-type': 'application/octet-stream',
                'content-length': fs.statSync(filePath).size
              }
            });
            console.log(`Uploaded ${file} to release assets.`);
          });
